<!DOCTYPE html>
<html lang="id" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Absensi & Penilaian Digital - SMPN 58 Palembang</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <!-- Animate.css Library -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üè´</text></svg>">
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    keyframes: {
                        'shake': {
                            '10%, 90%': { transform: 'translate3d(-1px, 0, 0)' },
                            '20%, 80%': { transform: 'translate3d(2px, 0, 0)' },
                            '30%, 50%, 70%': { transform: 'translate3d(-4px, 0, 0)' },
                            '40%, 60%': { transform: 'translate3d(4px, 0, 0)' },
                        }
                    },
                    animation: {
                        'shake': 'shake 0.82s cubic-bezier(.36,.07,.19,.97) both',
                    }
                }
            }
        }
    </script>
    <style>
        body { font-family: 'Inter', sans-serif; }
        .loader { border: 4px solid rgba(255,255,255,0.2); border-top: 4px solid #6366f1; border-radius: 50%; width: 32px; height: 32px; animation: spin 1s linear infinite; }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        
        .sidebar { transition: transform 0.3s ease-in-out; }
        .sidebar-overlay { transition: opacity 0.3s ease-in-out; }
        
        .main-nav.active { background-color: #4338ca; color: white; }
        .rekap-tab.active { border-color: #6366f1; color: #a5b4fc; background-color: #312e81; }

        /* Custom Scrollbar */
        ::-webkit-scrollbar { width: 8px; }
        ::-webkit-scrollbar-track { background: #1e293b; }
        ::-webkit-scrollbar-thumb { background: #475569; border-radius: 10px; }
        ::-webkit-scrollbar-thumb:hover { background: #64748b; }

        /* Status colors */
        .status-hadir { background-color: #10b981; color: white; }
        .status-sakit { background-color: #ef4444; color: white; }
        .status-izin { background-color: #f59e0b; color: white; }
        .status-alfa { background-color: #6b7280; color: white; }

        @media print {
            body * { visibility: hidden; }
            #print-area, #print-area * { visibility: visible; }
            #print-area { position: absolute; left: 0; top: 0; width: 100%; color: black !important; }
            .no-print { display: none; }
        }
    </style>
</head>
<body class="bg-slate-900 text-gray-300">

    <!-- Notification Canvas -->
    <div id="notification" class="fixed top-5 right-5 bg-slate-800 border border-slate-700 text-white px-6 py-4 rounded-lg shadow-lg z-50 transform transition-all duration-500 opacity-0 -translate-y-12">
        <p id="notification-message"></p>
    </div>

    <!-- Halaman Login -->
    <div id="login-page" class="flex items-center justify-center min-h-screen bg-slate-900">
        <div class="w-full max-w-md bg-slate-800 border border-slate-700 rounded-2xl shadow-lg p-8 m-4 transform transition-all hover:scale-105 duration-300">
            <div class="text-center mb-8">
                <div class="w-20 h-20 bg-indigo-500/10 rounded-full mx-auto flex items-center justify-center mb-4 ring-2 ring-indigo-500/20">
                     <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/></svg>
                </div>
                <h1 class="text-2xl font-bold text-gray-100">SMP NEGERI 58 PALEMBANG</h1>
                <p class="text-gray-400">Sistem Absensi & Penilaian Digital</p>
            </div>
            <form id="login-form">
                <div class="space-y-4">
                    <input type="text" id="username" placeholder="Username" required class="w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-white placeholder-gray-400 transition-all duration-300">
                    <input type="password" id="password" placeholder="Password" required class="w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-white placeholder-gray-400 transition-all duration-300">
                </div>
                <button type="submit" class="w-full mt-6 bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-semibold py-3 rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-transform transform hover:scale-105 active:scale-95">Login</button>
            </form>
        </div>
    </div>

    <!-- Konten Utama Aplikasi (setelah login) -->
    <div id="app-content" class="hidden">
        <!-- Sidebar -->
        <div id="sidebar-overlay" class="sidebar-overlay fixed inset-0 bg-black/60 z-30 opacity-0 pointer-events-none lg:hidden"></div>
        <aside id="sidebar" class="sidebar fixed top-0 left-0 h-full w-64 bg-slate-800 border-r border-slate-700 z-40 transform -translate-x-full lg:translate-x-0 flex flex-col">
            <div class="p-4 flex items-center justify-between border-b border-slate-700">
                <div class="flex items-center gap-3">
                    <div class="w-10 h-10 bg-indigo-500/10 rounded-full flex items-center justify-center ring-1 ring-indigo-500/20">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/></svg>
                    </div>
                    <span class="font-bold text-lg text-gray-100">SMPN 58 PLB</span>
                </div>
                <!-- Tombol Tutup Sidebar -->
                <button id="sidebar-close-btn" class="lg:hidden text-slate-400 hover:text-white transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16"><path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"/></svg>
                </button>
            </div>
            <nav class="flex-grow p-4 space-y-2">
                <button id="nav-beranda" class="main-nav w-full flex items-center gap-3 px-4 py-2.5 rounded-lg text-gray-300 hover:bg-slate-700 transition-all">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L8 2.207l6.646 6.647a.5.5 0 0 0 .708-.708L8.707 1.5z"/><path d="m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6z"/></svg>
                    <span>Beranda</span>
                </button>
                <button id="nav-absensi" class="main-nav w-full flex items-center gap-3 px-4 py-2.5 rounded-lg text-gray-300 hover:bg-slate-700 transition-all">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5z"/><path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z"/></svg>
                    <span>Absensi</span>
                </button>
                <button id="nav-penilaian" class="main-nav w-full flex items-center gap-3 px-4 py-2.5 rounded-lg text-gray-300 hover:bg-slate-700 transition-all">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M10.854 4.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 6.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z"/></svg>
                    <span>Penilaian</span>
                </button>
                <button id="nav-rekapan" class="main-nav w-full flex items-center gap-3 px-4 py-2.5 rounded-lg text-gray-300 hover:bg-slate-700 transition-all">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.746c-.897-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783"/></svg>
                    <span>Rekapan</span>
                </button>
                <button id="logout-button" class="main-nav w-full flex items-center gap-3 px-4 py-2.5 rounded-lg text-gray-300 hover:bg-slate-700 transition-all">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M8.5 10c-.276 0-.5-.448-.5-1s.224-1 .5-1 .5.448.5 1-.224 1-.5 1"/><path d="M12 1a1 1 0 0 1 1 1v10.755S12 11 8 11s-5 1.755-5 1.755V2a1 1 0 0 1 1-1zM4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/></svg>
                    <span>Logout</span>
                </button>
            </nav>
            <div class="mt-auto p-4 border-t border-slate-700">
                <p class="text-xs text-slate-500 text-center">¬© 2025 Aris Bermansyah, S.Kom</p>
            </div>
        </aside>

        <!-- Main Content -->
        <div class="lg:pl-64">
            <header class="sticky top-0 bg-slate-900/70 backdrop-blur-sm border-b border-slate-700 z-20 no-print">
                <div class="h-16 flex items-center px-4 md:px-6">
                    <button id="sidebar-toggle" class="lg:hidden text-gray-300 hover:text-white">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5"/></svg>
                    </button>
                    <h1 id="page-title" class="text-lg font-semibold text-gray-100 ml-4 lg:ml-0">Beranda</h1>
                </div>
            </header>
            <main class="p-4 md:p-6">
                <!-- Halaman Beranda -->
                <div id="page-beranda">
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <!-- Menu Card Absensi -->
                        <button class="menu-card bg-slate-800 border border-slate-700 rounded-lg p-6 text-center hover:border-indigo-500 hover:scale-105 transition-all duration-300" data-target="absensi">
                            <div class="w-16 h-16 bg-indigo-500/10 rounded-full mx-auto flex items-center justify-center mb-4 ring-2 ring-indigo-500/20">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" /></svg>
                            </div>
                            <h3 class="text-xl font-bold text-white">Mulai Absensi</h3>
                            <p class="text-slate-400 mt-1 text-sm">Catat kehadiran siswa harian atau per mata pelajaran.</p>
                        </button>
                        <!-- Menu Card Penilaian -->
                        <button class="menu-card bg-slate-800 border border-slate-700 rounded-lg p-6 text-center hover:border-green-500 hover:scale-105 transition-all duration-300" data-target="penilaian">
                            <div class="w-16 h-16 bg-green-500/10 rounded-full mx-auto flex items-center justify-center mb-4 ring-2 ring-green-500/20">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4" /></svg>
                            </div>
                            <h3 class="text-xl font-bold text-white">Input Penilaian</h3>
                            <p class="text-slate-400 mt-1 text-sm">Masukkan nilai harian atau nilai per bab untuk setiap siswa.</p>
                        </button>
                        <!-- Menu Card Rekapan -->
                        <button class="menu-card bg-slate-800 border border-slate-700 rounded-lg p-6 text-center hover:border-sky-500 hover:scale-105 transition-all duration-300" data-target="rekapan">
                            <div class="w-16 h-16 bg-sky-500/10 rounded-full mx-auto flex items-center justify-center mb-4 ring-2 ring-sky-500/20">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-sky-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" /></svg>
                            </div>
                            <h3 class="text-xl font-bold text-white">Lihat Rekapan</h3>
                            <p class="text-slate-400 mt-1 text-sm">Tampilkan dan cetak rekapitulasi absensi siswa.</p>
                        </button>
                    </div>
                </div>
                <!-- Halaman Absensi -->
                <div id="page-absensi" class="hidden">
                    <div class="bg-slate-800 border border-slate-700 rounded-lg p-6 space-y-6">
                        <div class="flex flex-col md:flex-row justify-between md:items-center">
                            <div><h2 class="text-2xl font-bold text-white">Input Absensi</h2><p id="current-date" class="text-slate-400"></p></div>
                        </div>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label for="absensi-wali-kelas-select" class="block text-sm font-medium text-gray-200 mb-2">Absensi Wali Kelas (Harian)</label>
                                <select id="absensi-wali-kelas-select" data-type="wali_kelas" class="class-selector-select w-full pl-3 pr-10 py-2.5 bg-slate-700 border-slate-600 rounded-md text-white transition-all duration-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                                    <option value="">-- Pilih Kelas --</option>
                                    <option value="7.1">Kelas 7.1</option>
                                </select>
                            </div>
                            <div>
                                <label for="absensi-mapel-select" class="block text-sm font-medium text-gray-200 mb-2">Absensi Guru Mata Pelajaran (Per Jam)</label>
                                <select id="absensi-mapel-select" data-type="guru_mapel" class="class-selector-select w-full pl-3 pr-10 py-2.5 bg-slate-700 border-slate-600 rounded-md text-white transition-all duration-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                                    <option value="">-- Pilih Kelas --</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div id="student-grid-container" class="hidden mt-8">
                        <div class="flex flex-col md:flex-row justify-between items-center mb-4 px-1">
                            <h2 class="text-xl font-bold text-gray-100 mb-4 md:mb-0">Daftar Siswa - Kelas <span id="selected-class-title"></span></h2>
                            <div class="flex gap-4"><button id="hadir-semua-btn" class="bg-green-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-green-700 transition-transform transform hover:scale-105 active:scale-95">Hadir Semua</button><button id="simpan-absensi-btn" class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-semibold py-2 px-4 rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-transform transform hover:scale-105 active:scale-95 flex items-center gap-2"><span id="simpan-btn-text">Simpan Absensi</span><div id="simpan-loader" class="hidden w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div></button></div>
                        </div>
                        <div id="student-grid-loader" class="text-center py-10"><div class="loader mx-auto"></div><p class="mt-2 text-slate-400">Memuat data siswa...</p></div>
                        <div id="student-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4"></div>
                    </div>
                </div>
                <!-- Halaman Penilaian -->
                <div id="page-penilaian" class="hidden">
                    <div class="bg-slate-800 border border-slate-700 rounded-lg p-6">
                        <h2 class="text-2xl font-bold text-white mb-6">Input Penilaian Siswa</h2>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 items-end">
                            <div><label for="penilaian-kelas" class="block text-sm font-medium text-gray-400">Pilih Kelas</label><select id="penilaian-kelas" class="mt-1 block w-full pl-3 pr-10 py-2.5 bg-slate-700 border-slate-600 rounded-md text-white"><option value="">-- Pilih --</option></select></div>
                            <div><label for="penilaian-jenis" class="block text-sm font-medium text-gray-400">Jenis Penilaian</label><select id="penilaian-jenis" class="mt-1 block w-full pl-3 pr-10 py-2.5 bg-slate-700 border-slate-600 rounded-md text-white"><option value="harian">Penilaian Harian</option><option value="bab">Penilaian Bab</option></select></div>
                            <div id="penilaian-bab-container" class="hidden"><label for="penilaian-bab-desc" class="block text-sm font-medium text-gray-400">Keterangan (Contoh: Bab 1)</label><input type="text" id="penilaian-bab-desc" class="mt-1 block w-full bg-slate-700 border-slate-600 rounded-md py-2.5 px-3 text-white"></div>
                        </div>
                    </div>
                    <div id="penilaian-siswa-container" class="hidden mt-8">
                        <div class="flex justify-end mb-4"><button id="simpan-penilaian-btn" class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-semibold py-2 px-4 rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-transform transform hover:scale-105 active:scale-95 flex items-center gap-2"><span id="simpan-nilai-btn-text">Simpan Nilai</span><div id="simpan-nilai-loader" class="hidden w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div></button></div>
                        <div id="penilaian-siswa-loader" class="text-center py-10"><div class="loader mx-auto"></div><p class="mt-2 text-slate-400">Memuat data siswa...</p></div>
                        <div id="penilaian-siswa-list" class="space-y-3"></div>
                    </div>
                </div>
                <!-- Halaman Rekapan -->
                <div id="page-rekapan" class="hidden">
                    <div class="bg-slate-800 border border-slate-700 rounded-lg p-6">
                        <div class="flex flex-col md:flex-row justify-between items-center mb-4"><h2 class="text-2xl font-bold text-white mb-4 md:mb-0">Rekapan Kehadiran Siswa</h2><button id="print-btn-rekapan" class="no-print bg-gradient-to-r from-indigo-600 to-purple-600 text-white font-semibold py-2 px-4 rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-transform transform hover:scale-105 active:scale-95">Cetak</button></div>
                        <div class="no-print border-b border-slate-700 mb-6"><nav class="-mb-px flex space-x-6" aria-label="Tabs"><button class="rekap-tab active whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" data-rekap-type="wali_kelas">Rekap Wali Kelas</button><button class="rekap-tab whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm border-transparent text-gray-400 hover:text-gray-200 hover:border-gray-500" data-rekap-type="guru_mapel">Rekap Guru Mapel</button></nav></div>
                        <div class="no-print flex flex-wrap gap-4 items-end mb-6">
                            <div id="filter-tingkat-mapel-rekapan" class="hidden"><label for="rekapan-tingkat" class="block text-sm font-medium text-gray-400">Tingkatan</label><select id="rekapan-tingkat" class="mt-1 block w-full pl-3 pr-10 py-2.5 bg-slate-700 border-slate-600 rounded-md text-white"><option value="7">Kelas 7</option><option value="8">Kelas 8</option><option value="9">Kelas 9</option></select></div>
                            <div><label for="rekapan-kelas" class="block text-sm font-medium text-gray-400">Kelas</label><select id="rekapan-kelas" class="mt-1 block w-full pl-3 pr-10 py-2.5 bg-slate-700 border-slate-600 rounded-md text-white"></select></div>
                            <div><label for="rekapan-type" class="block text-sm font-medium text-gray-400">Jenis</label><select id="rekapan-type" class="mt-1 block w-full pl-3 pr-10 py-2.5 bg-slate-700 border-slate-600 rounded-md text-white"><option value="harian">Harian</option><option value="bulanan">Bulanan</option></select></div>
                            <div id="filter-harian-rekapan"><label for="rekapan-tanggal" class="block text-sm font-medium text-gray-400">Tanggal</label><input type="date" id="rekapan-tanggal" class="mt-1 block w-full bg-slate-700 border-slate-600 rounded-md py-2 px-3 text-white"></div>
                            <div id="filter-bulanan-rekapan" class="hidden"><label for="rekapan-bulan" class="block text-sm font-medium text-gray-400">Bulan</option><input type="month" id="rekapan-bulan" class="mt-1 block w-full bg-slate-700 border-slate-600 rounded-md py-2 px-3 text-white"></div>
                            <button id="tampilkan-rekapan-btn" class="bg-slate-600 text-white font-semibold py-2.5 px-4 rounded-lg hover:bg-slate-700 transition-transform transform hover:scale-105 active:scale-95">Tampilkan</button>
                        </div>
                        <div id="rekapan-content"><div id="rekapan-loader" class="text-center py-10 hidden"><div class="loader mx-auto"></div><p class="mt-2 text-slate-400">Memuat rekapan...</p></div><div id="print-area"><div id="rekapan-title" class="text-center mb-4 hidden"><h2 class="text-xl font-bold text-white">Rekap Absensi</h2><p id="rekapan-subtitle" class="text-slate-400"></p></div><div id="rekapan-table-container" class="overflow-x-auto"></div></div></div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script>
        // --- SCRIPT LOGIC ---
        const scriptURL = 'https://script.google.com/macros/s/AKfycbyrxExI1d3038H263NDFTExUdQpAyZ3x4DViwV1k5BcOX-SzvtNGJofVKqVhTardfaHZA/exec';
        const KELAS_7 = ["7.1", "7.2", "7.3", "7.4"];
        const KELAS_8 = ["8.1", "8.2", "8.3", "8.4"];
        const KELAS_9 = ["9.1", "9.2", "9.3", "9.4"];
        const SEMUA_KELAS = [...KELAS_7, ...KELAS_8, ...KELAS_9];

        window.addEventListener('DOMContentLoaded', () => {
            // --- DOM Elements ---
            const loginPage = document.getElementById('login-page');
            const appContent = document.getElementById('app-content');
            const loginForm = document.getElementById('login-form');
            const logoutButton = document.getElementById('logout-button');
            const sidebar = document.getElementById('sidebar');
            const sidebarOverlay = document.getElementById('sidebar-overlay');
            const sidebarToggle = document.getElementById('sidebar-toggle');
            const sidebarCloseBtn = document.getElementById('sidebar-close-btn');
            const pageTitle = document.getElementById('page-title');
            const navButtons = document.querySelectorAll('.main-nav');
            
            const pageBeranda = document.getElementById('page-beranda');
            const pageAbsensi = document.getElementById('page-absensi');
            const pagePenilaian = document.getElementById('page-penilaian');
            const pageRekapan = document.getElementById('page-rekapan');
            
            const penilaianKelasSelect = document.getElementById('penilaian-kelas');
            
            // --- Functions ---
            function initApp() {
                SEMUA_KELAS.forEach(k => {
                    const option = document.createElement('option');
                    option.value = k;
                    option.textContent = `Kelas ${k}`;
                    penilaianKelasSelect.appendChild(option);
                });
                addAbsensiEventListeners();
                addPenilaianEventListeners();
                addRekapanEventListeners();
                addBerandaEventListeners();
                navigate('beranda');
            }

            function handleLogin(e) { e.preventDefault(); if (document.getElementById('username').value === 'admin' && document.getElementById('password').value === 'admin') { loginPage.classList.add('hidden'); appContent.classList.remove('hidden'); sessionStorage.setItem('loggedIn', 'true'); initApp(); } else { const form = document.getElementById('login-form'); form.classList.add('animate-shake'); setTimeout(() => form.classList.remove('animate-shake'), 820); showNotification('Username atau password salah.', 'error'); } }
            function handleLogout() { sessionStorage.removeItem('loggedIn'); location.reload(); }
            
            function navigate(pageId) {
                pageBeranda.classList.add('hidden');
                pageAbsensi.classList.add('hidden');
                pagePenilaian.classList.add('hidden');
                pageRekapan.classList.add('hidden');
                const targetPage = document.getElementById(`page-${pageId}`);
                if(targetPage) {
                    targetPage.classList.remove('hidden');
                    const content = targetPage.children[0];
                    if(content) {
                        content.classList.remove('animate__animated', 'animate__fadeInUp');
                        void content.offsetWidth; // Trigger reflow
                        content.classList.add('animate__animated', 'animate__fadeInUp');
                    }
                }

                navButtons.forEach(btn => btn.classList.remove('active'));
                const activeNav = document.getElementById(`nav-${pageId}`);
                if (activeNav) {
                    activeNav.classList.add('active');
                    pageTitle.textContent = activeNav.querySelector('span').textContent;
                }
                
                if (window.innerWidth < 1024) {
                    sidebar.classList.add('-translate-x-full');
                    sidebarOverlay.classList.add('opacity-0', 'pointer-events-none');
                }
            }
            
            function toggleSidebar() {
                sidebar.classList.toggle('-translate-x-full');
                sidebarOverlay.classList.toggle('opacity-0');
                sidebarOverlay.classList.toggle('pointer-events-none');
            }

            function showNotification(message, type = 'info') {
                const notification = document.getElementById('notification');
                const notificationMessage = document.getElementById('notification-message');
                
                notificationMessage.textContent = message;
                
                notification.className = 'fixed top-5 right-5 text-white px-6 py-4 rounded-lg shadow-lg z-50 transform transition-all duration-500';

                if (type === 'success') {
                    notification.classList.add('bg-green-600', 'border', 'border-green-500');
                } else if (type === 'error') {
                    notification.classList.add('bg-red-600', 'border', 'border-red-500');
                } else {
                    notification.classList.add('bg-slate-800', 'border', 'border-slate-700');
                }

                notification.classList.remove('opacity-0', '-translate-y-12');
                notification.classList.add('opacity-100', 'translate-y-0');

                setTimeout(() => {
                    notification.classList.remove('opacity-100', 'translate-y-0');
                    notification.classList.add('opacity-0', '-translate-y-12');
                }, 3000);
            }

            // --- Event Listeners ---
            if (sessionStorage.getItem('loggedIn') === 'true') {
                loginPage.classList.add('hidden');
                appContent.classList.remove('hidden');
                initApp();
            }
            loginForm.addEventListener('submit', handleLogin);
            logoutButton.addEventListener('click', handleLogout);
            sidebarToggle.addEventListener('click', toggleSidebar);
            sidebarCloseBtn.addEventListener('click', toggleSidebar);
            sidebarOverlay.addEventListener('click', toggleSidebar);
            navButtons.forEach(btn => {
                btn.addEventListener('click', () => navigate(btn.id.replace('nav-', '')));
            });
            
            function addBerandaEventListeners() {
                document.querySelectorAll('.menu-card').forEach(card => {
                    card.addEventListener('click', () => {
                        navigate(card.dataset.target);
                    });
                });
            }

            function addPenilaianEventListeners() {
                const penilaianJenisSelect = document.getElementById('penilaian-jenis');
                const penilaianBabContainer = document.getElementById('penilaian-bab-container');
                const penilaianSiswaContainer = document.getElementById('penilaian-siswa-container');
                const penilaianSiswaList = document.getElementById('penilaian-siswa-list');
                const penilaianSiswaLoader = document.getElementById('penilaian-siswa-loader');
                const simpanPenilaianBtn = document.getElementById('simpan-penilaian-btn');

                async function loadStudentsForGrading() {
                    const kelas = penilaianKelasSelect.value;
                    if (!kelas) {
                        penilaianSiswaContainer.classList.add('hidden');
                        return;
                    }
                    penilaianSiswaContainer.classList.remove('hidden');
                    penilaianSiswaList.innerHTML = '';
                    penilaianSiswaLoader.classList.remove('hidden');

                    try {
                        const response = await fetch(`${scriptURL}?action=getStudents&kelas=${kelas}`);
                        const students = await response.json();
                        if (students.error) throw new Error(students.error);
                        if (students.length === 0) {
                            penilaianSiswaList.innerHTML = `<p class="text-center text-yellow-400">Tidak ada data siswa di sheet "Daftar Murid ${kelas}".</p>`;
                            return;
                        }

                        students.forEach((student, index) => {
                            const div = document.createElement('div');
                            div.className = 'grid grid-cols-3 items-center gap-4 bg-slate-700/50 p-3 rounded-lg border border-slate-700 student-grade-row animate__animated animate__fadeInUp';
                            div.style.animationDelay = `${index * 50}ms`;
                            div.dataset.nama = student.Nama;
                            div.dataset.nisn = student.NISN;
                            div.innerHTML = `
                                <div class="col-span-2">
                                    <p class="font-medium text-gray-200">${student.Nama}</p>
                                    <p class="text-xs text-gray-400">${student.NISN}</p>
                                </div>
                                <div>
                                    <input type="number" min="0" max="100" class="nilai-input w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-white" placeholder="Nilai">
                                </div>
                            `;
                            penilaianSiswaList.appendChild(div);
                        });

                    } catch (error) {
                        penilaianSiswaList.innerHTML = `<p class="text-center text-red-400">Gagal memuat data siswa. Error: ${error.message}</p>`;
                    } finally {
                        penilaianSiswaLoader.classList.add('hidden');
                    }
                }

                async function saveGrades() {
                    const gradesData = [];
                    document.querySelectorAll('.student-grade-row').forEach(row => {
                        const nilai = row.querySelector('.nilai-input').value;
                        if (nilai) {
                            gradesData.push({ nama: row.dataset.nama, nisn: row.dataset.nisn, nilai: nilai });
                        }
                    });

                    if (gradesData.length === 0) {
                        showNotification('Tidak ada nilai yang diisi untuk disimpan.', 'error');
                        return;
                    }

                    const simpanBtnText = document.getElementById('simpan-nilai-btn-text');
                    const simpanBtnLoader = document.getElementById('simpan-nilai-loader');
                    simpanPenilaianBtn.disabled = true;
                    simpanBtnLoader.classList.remove('hidden');
                    simpanBtnText.textContent = 'Menyimpan...';

                    const payload = {
                        action: 'saveNilai',
                        kelas: penilaianKelasSelect.value,
                        jenis: penilaianJenisSelect.value,
                        keterangan: document.getElementById('penilaian-bab-desc').value || '',
                        tanggal: new Date().toISOString().slice(0, 10),
                        data: gradesData
                    };
                    
                    try {
                        const response = await fetch(scriptURL, { method: 'POST', body: JSON.stringify(payload), headers: { 'Content-Type': 'text/plain;charset=utf-8' } });
                        const result = await response.json();
                        if (result.result === 'success') {
                            showNotification('Nilai berhasil disimpan!', 'success');
                            document.querySelectorAll('.nilai-input').forEach(input => input.value = '');
                        } else { throw new Error(result.message || 'Unknown error'); }
                    } catch (error) {
                        showNotification(`Gagal menyimpan nilai. Error: ${error.message}`, 'error');
                    } finally {
                        simpanPenilaianBtn.disabled = false;
                        simpanBtnLoader.classList.add('hidden');
                        simpanBtnText.textContent = 'Simpan Nilai';
                    }
                }

                penilaianJenisSelect.addEventListener('change', (e) => {
                    penilaianBabContainer.classList.toggle('hidden', e.target.value !== 'bab');
                });
                penilaianKelasSelect.addEventListener('change', loadStudentsForGrading);
                simpanPenilaianBtn.addEventListener('click', saveGrades);
            }
            
            function addAbsensiEventListeners() {
                const today = new Date();
                const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                document.getElementById('current-date').textContent = today.toLocaleDateString('id-ID', options);
                
                const mapelSelect = document.getElementById('absensi-mapel-select');
                SEMUA_KELAS.forEach(k => {
                    mapelSelect.innerHTML += `<option value="${k}">${k}</option>`;
                });

                let selectedKelas, selectedAttendanceType;
                
                async function loadStudents(kelas, type) {
                    selectedKelas = kelas; selectedAttendanceType = type;
                    const studentGridContainer = document.getElementById('student-grid-container');
                    const studentGrid = document.getElementById('student-grid');
                    const studentGridLoader = document.getElementById('student-grid-loader');
                    studentGridContainer.classList.remove('hidden'); studentGrid.innerHTML = ''; studentGridLoader.classList.remove('hidden');
                    document.getElementById('selected-class-title').textContent = kelas;
                    try {
                        const response = await fetch(`${scriptURL}?action=getStudents&kelas=${kelas}`);
                        const students = await response.json();
                        if (students.error) throw new Error(students.error);
                        if (students.length === 0) {
                            studentGrid.innerHTML = `<p class="col-span-full text-center text-yellow-400">Tidak ada data siswa di sheet "Daftar Murid ${kelas}". Harap isi terlebih dahulu.</p>`;
                            return;
                        }
                        students.forEach((student, index) => {
                            const card = document.createElement('div');
                            card.className = 'student-card bg-slate-800 border border-slate-700 rounded-lg p-3 space-y-3 animate__animated animate__fadeInUp';
                            card.style.animationDelay = `${index * 50}ms`;
                            card.dataset.nisn = student.NISN; card.dataset.nama = student.Nama; card.dataset.status = 'Hadir';
                            card.innerHTML = `
                                <div>
                                    <h4 class="font-bold text-gray-100 truncate">${student.Nama}</h4>
                                    <p class="text-sm text-gray-400">${student.NISN || '-'}</p>
                                </div>
                                <div class="relative">
                                    <button class="status-trigger w-full flex items-center justify-between px-3 py-2 rounded-md text-sm font-semibold transition-colors duration-200 status-hadir">
                                        <span>Hadir</span>
                                        <svg class="w-4 h-4 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path></svg>
                                    </button>
                                    <div class="status-menu absolute bottom-full mb-2 w-full bg-slate-700 border border-slate-600 rounded-md shadow-lg z-10 hidden transition-all duration-200 ease-out origin-bottom scale-95 opacity-0">
                                        <button data-status="Hadir" class="w-full text-left px-3 py-2 text-sm hover:bg-slate-600 text-green-400">Hadir</button>
                                        <button data-status="Sakit" class="w-full text-left px-3 py-2 text-sm hover:bg-slate-600 text-red-400">Sakit</button>
                                        <button data-status="Izin" class="w-full text-left px-3 py-2 text-sm hover:bg-slate-600 text-yellow-400">Izin</button>
                                        <button data-status="Alfa" class="w-full text-left px-3 py-2 text-sm hover:bg-slate-600 text-gray-400">Alfa</button>
                                    </div>
                                </div>`;
                            studentGrid.appendChild(card);
                        });
                    } catch (error) { studentGrid.innerHTML = `<p class="col-span-full text-center text-red-400">Gagal memuat data siswa. Pastikan sheet "Daftar Murid ${kelas}" ada dan benar. Error: ${error.message}</p>`; } finally { studentGridLoader.classList.add('hidden'); }
                }

                function setStudentStatus(card, status) {
                    card.dataset.status = status;
                    const trigger = card.querySelector('.status-trigger');
                    const triggerText = trigger.querySelector('span');
                    
                    trigger.className = 'status-trigger w-full flex items-center justify-between px-3 py-2 rounded-md text-sm font-semibold transition-colors duration-200'; // Reset classes
                    triggerText.textContent = status;

                    if (status === 'Hadir') trigger.classList.add('status-hadir');
                    else if (status === 'Sakit') trigger.classList.add('status-sakit');
                    else if (status === 'Izin') trigger.classList.add('status-izin');
                    else if (status === 'Alfa') trigger.classList.add('status-alfa');
                }

                async function saveAttendance() {
                    const attendanceData = []; document.querySelectorAll('.student-card').forEach(card => { attendanceData.push({ nama: card.dataset.nama, nisn: card.dataset.nisn, status: card.dataset.status }); });
                    if (attendanceData.length === 0) { showNotification('Tidak ada data siswa untuk disimpan.', 'error'); return; }
                    const simpanBtn = document.getElementById('simpan-absensi-btn');
                    simpanBtn.disabled = true; document.getElementById('simpan-loader').classList.remove('hidden'); document.getElementById('simpan-btn-text').textContent = 'Menyimpan...';
                    const payload = { action: 'saveAbsensi', kelas: selectedKelas, type: selectedAttendanceType, tanggal: new Date().toISOString().slice(0, 10), data: attendanceData };
                    try {
                        const response = await fetch(scriptURL, { method: 'POST', body: JSON.stringify(payload), headers: { 'Content-Type': 'text/plain;charset=utf-8' } });
                        const result = await response.json();
                        if (result.result === 'success') { showNotification('Absensi berhasil disimpan!', 'success'); } else { throw new Error(result.message || 'Unknown error'); }
                    } catch (error) { showNotification(`Gagal menyimpan absensi. Error: ${error.message}`, 'error'); } finally { simpanBtn.disabled = false; document.getElementById('simpan-loader').classList.add('hidden'); document.getElementById('simpan-btn-text').textContent = 'Simpan Absensi'; }
                }
                
                document.querySelectorAll('.class-selector-select').forEach(select => {
                    select.addEventListener('change', (e) => {
                        const kelas = e.target.value;
                        if (kelas) {
                            loadStudents(kelas, e.target.dataset.type);
                        }
                    });
                });
                
                document.getElementById('student-grid').addEventListener('click', (e) => {
                    const trigger = e.target.closest('.status-trigger');
                    const menuOption = e.target.closest('.status-menu button');
                    
                    document.querySelectorAll('.status-menu').forEach(menu => {
                        if (!menu.parentElement.contains(trigger)) {
                           menu.classList.add('hidden', 'scale-95', 'opacity-0');
                           menu.previousElementSibling.querySelector('svg').classList.remove('rotate-180');
                        }
                    });

                    if (trigger) {
                        const menu = trigger.nextElementSibling;
                        menu.classList.toggle('hidden');
                        setTimeout(() => {
                            menu.classList.toggle('scale-95');
                            menu.classList.toggle('opacity-0');
                            trigger.querySelector('svg').classList.toggle('rotate-180');
                        }, 10);
                    }

                    if (menuOption) {
                        const card = menuOption.closest('.student-card');
                        const status = menuOption.dataset.status;
                        setStudentStatus(card, status);
                    }
                });

                document.getElementById('hadir-semua-btn').addEventListener('click', () => { document.querySelectorAll('.student-card').forEach(card => { setStudentStatus(card, 'Hadir'); }); });
                document.getElementById('simpan-absensi-btn').addEventListener('click', saveAttendance);
            }

            function addRekapanEventListeners() {
                const rekapanTabs = document.querySelectorAll('.rekap-tab');
                const filterTingkatMapel = document.getElementById('filter-tingkat-mapel-rekapan');
                const rekapanTingkat = document.getElementById('rekapan-tingkat');
                const rekapanKelas = document.getElementById('rekapan-kelas');
                const rekapanType = document.getElementById('rekapan-type');
                const filterHarian = document.getElementById('filter-harian-rekapan');
                const filterBulanan = document.getElementById('filter-bulanan-rekapan');
                const tampilkanRekapanBtn = document.getElementById('tampilkan-rekapan-btn');
                
                let activeRekapType = 'wali_kelas';

                function updateRekapKelasOptions() {
                    rekapanKelas.innerHTML = '';
                    let kelasList = [];
                    if (activeRekapType === 'wali_kelas') {
                        kelasList = ["7.1"];
                    } else {
                        const tingkat = rekapanTingkat.value;
                        if (tingkat === '7') { kelasList = KELAS_7; } 
                        else if (tingkat === '8') { kelasList = KELAS_8; } 
                        else { kelasList = KELAS_9; }
                    }
                    kelasList.forEach(k => {
                        const option = document.createElement('option');
                        option.value = k; option.textContent = k;
                        rekapanKelas.appendChild(option);
                    });
                }

                async function loadRekapan() {
                    const rekapanLoader = document.getElementById('rekapan-loader');
                    const rekapanTableContainer = document.getElementById('rekapan-table-container');
                    const rekapanTitle = document.getElementById('rekapan-title');
                    rekapanLoader.classList.remove('hidden'); rekapanTableContainer.innerHTML = ''; rekapanTitle.classList.add('hidden');
                    
                    const kelas = rekapanKelas.value;
                    const type = rekapanType.value;
                    const tanggal = document.getElementById('rekapan-tanggal').value;
                    const bulan = document.getElementById('rekapan-bulan').value;
                    const tingkat = rekapanTingkat.value;
                    
                    let url = `${scriptURL}?action=getRekapan&rekapType=${activeRekapType}&kelas=${kelas}&type=${type}`;
                    if (activeRekapType === 'guru_mapel') url += `&tingkat=${tingkat}`;
                    if (type === 'harian') { url += `&tanggal=${tanggal}`; document.getElementById('rekapan-subtitle').textContent = `Kelas ${kelas} - Tanggal ${new Date(tanggal+'T00:00:00').toLocaleDateString('id-ID', { dateStyle: 'full' })}`; } 
                    else { url += `&bulan=${bulan}`; const [year, month] = bulan.split('-'); document.getElementById('rekapan-subtitle').textContent = `Kelas ${kelas} - Bulan ${new Date(year, month-1).toLocaleString('id-ID', { month: 'long', year: 'numeric' })}`; }
                    
                    try {
                        const response = await fetch(url);
                        const result = await response.json();
                        if (result.error) throw new Error(result.error);
                        rekapanTitle.classList.remove('hidden');
                        if (result.length === 0) { rekapanTableContainer.innerHTML = '<p class="text-center text-slate-400">Tidak ada data untuk periode yang dipilih.</p>'; return; }
                        const table = document.createElement('table'); table.className = 'min-w-full divide-y divide-slate-700';
                        const thead = document.createElement('thead'); thead.className = 'bg-slate-700/50';
                        const headers = Object.keys(result[0]);
                        thead.innerHTML = `<tr>${headers.map(h => `<th class="px-6 py-3 text-left text-xs font-medium text-slate-300 uppercase tracking-wider">${h}</th>`).join('')}</tr>`;
                        const tbody = document.createElement('tbody'); tbody.className = 'bg-slate-800 divide-y divide-slate-700';
                        result.forEach(row => { const tr = document.createElement('tr'); tr.innerHTML = headers.map(h => `<td class="px-6 py-4 whitespace-nowrap text-sm text-slate-300">${row[h]}</td>`).join(''); tbody.appendChild(tr); });
                        table.append(thead, tbody); rekapanTableContainer.appendChild(table);
                    } catch (error) { rekapanTableContainer.innerHTML = `<p class="text-center text-red-400">Gagal memuat rekapan. Error: ${error.message}</p>`; } finally { rekapanLoader.classList.add('hidden'); }
                }

                const today = new Date();
                const yyyy = today.getFullYear();
                const mm = String(today.getMonth() + 1).padStart(2, '0');
                const dd = String(today.getDate()).padStart(2, '0');
                document.getElementById('rekapan-tanggal').value = `${yyyy}-${mm}-${dd}`;
                document.getElementById('rekapan-bulan').value = `${yyyy}-${mm}`;

                rekapanTabs.forEach(tab => {
                    tab.addEventListener('click', () => {
                        rekapanTabs.forEach(t => t.classList.remove('active'));
                        tab.classList.add('active');
                        activeRekapType = tab.dataset.rekapType;
                        filterTingkatMapel.classList.toggle('hidden', activeRekapType === 'wali_kelas');
                        updateRekapKelasOptions();
                    });
                });
                rekapanTingkat.addEventListener('change', updateRekapKelasOptions);
                rekapanType.addEventListener('change', () => { filterHarian.classList.toggle('hidden', rekapanType.value !== 'harian'); filterBulanan.classList.toggle('hidden', rekapanType.value !== 'bulanan'); });
                document.getElementById('tampilkan-rekapan-btn').addEventListener('click', loadRekapan);
                document.getElementById('print-btn-rekapan').addEventListener('click', () => window.print());
                updateRekapKelasOptions();
            }
        });
    </script>
</body>
</html>
